{{- if .Values.ingresses }}
{{- range $ingress := .Values.ingresses}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "{{ $.Release.Name }}-{{ $ingress.name }}"
  namespace: "{{ $.Release.Namespace }}"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if $ingress.enableSSL }}
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{- else }}
    kubernetes.io/ingress.allow-http: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{- end }}
    {{- if $ingress.tlsAcme }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
    {{- if $ingress.clusterIssuer }}
    certmanager.k8s.io/cluster-issuer: {{ $ingress.clusterIssuer }}
    {{- end }}
spec:
  {{- if $ingress.rules }}
  rules:
  {{- range $rule := $ingress.rules }}
  - host: "{{ $rule.host }}"
    # type: HTTP
    {{- if $rule.http }}
    http:
      paths:
      {{- range $path := $rule.http.paths }}
      - path: "{{ $path.path }}"
        backend:
          serviceName: "{{ $.Release.Name }}-{{ $path.backend.serviceSelector }}"
          servicePort: {{ $path.backend.servicePort }}
      {{- end }} # endforeach paths
    {{- end }} # endif rule.http
  {{- end }} # endforeach rule
  {{- end }} # endif rules
  ###
  # SSL
  ###
  {{- if $ingress.enableSSL }}
  tls:
  {{- range $rule := $ingress.rules }}
  - hosts:
    - "{{ $rule.host }}"
    secretName: "{{ $rule.host | replace "." "-" }}-tls"
  {{- end }}
  {{- end }}
{{- end }} # endforeach ingress
{{- end }} # endif ingress
